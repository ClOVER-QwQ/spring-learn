xml整合第三方框架有两种整合方案:
不需要自定义名空间，不需要使用Spring的配置文件配置第三方框架本身内容，例如:MyBatis;
需要引入第三方框架命名空间，需要使用Spring的配置文件配置第三方框架本身内容，例如:Dubbo.

Spring整合MyBatis，之前已经在Spring中简单的配置了SqlSessionFactory，但是这不是正规的整合方式
MyBatis提供了mybatis-spring.jar专门用于两大框架的整合。
Spring整合MyBatis的步骤如下:
导入MyBatis整合Spring的相关坐标;
(请见资料中的pom.xml)
编写Mapper和Mapper.xml;
配置SqlSessionFactoryBean和MapperScannerConfigurer;
编写测试代码

Spring整合MyBatis的原理剖析
整合包里提供了一个SqlSessionFactoryBean和一个扫描Mapper的配置对象，SqlSessionFactoryBean一旦被实例
化，就开始扫描Mapper并通过动态代理产生Mapper的实现类存储到Spring容器中。相关的有如下四个类:
SqlSessionFactoryBean:需要进行配置，用于提供SqlSessionFactory;
MapperScannerConfigurer:需要进行配置，用于扫描指定mapper注册BeanDefinition;
MapperFactoryBean:Mapper的FactoryBean，获得指定Mapper时调用getObject方法
ClassPathMapperScanner:definition.setAutowireMode(2)修改了自动注入状态，所以
MapperFactoryBean中的setSqlSessionFactory会自动注入进去。

Spring 整合其他组件时就不像MvBatis这么简单了，例如Dubbo框架在于Spring进行整合时，要使用Dubbo提供的
命名空间的扩展方式，自定义了一些Dubbo的标签
version="1.0:encoding="UTE-8"?>
<?xm1
xmlns="http://www.springframework.org/schema/beans"
<beans
xmlns:xsi="http://www.w3.org/2001/xMSchema-instance"
xmlns :dubbo="http://dubbo.apache.org/schema/dubbo"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://dubbo ,apache,ora/schema/dubbo http://dubbo,apache,ora/schema/dubbo/dubbo,xsd”>
配置应用名称-
<dubbo:application name="dubbo1-consumer"/>
<!--配置注册中心地址
<dubbo:registry address="zookeeper://localhost:2181"/>
<!--扫描dubbo的注解--
<dubbo:annotation package="com.clover.controller"/>
<!--消费者配置-->
timeout="1000" retries="0"/>
<dubbo:consumer
check="false"
</beans>